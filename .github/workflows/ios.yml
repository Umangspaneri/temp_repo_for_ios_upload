name: Build & Upload iOS App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-14

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'   # or the latest stable supporting Dart >= 3.5.4
          channel: 'stable'


      - name: Install dependencies
        run: |
          flutter pub get
          gem install cocoapods --user-install
          export PATH="$HOME/.gem/ruby/3.0.0/bin:$PATH"
          pod repo update
          cd ios
          pod install --repo-update
          cd ..

      # ðŸ”¹ Decode & install provisioning profile
      - name: Install provisioning profile
        run: |
          echo "$IOS_PROV_PROFILE_BASE64" | base64 --decode > profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          UUID=$(/usr/libexec/PlistBuddy -c "Print :UUID" /dev/stdin <<< $(security cms -D -i profile.mobileprovision))
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision

      # ðŸ”¹ Decode & import certificate
      - name: Install signing certificate
        run: |
          echo "$IOS_CERT_P12_BASE64" | base64 --decode > cert.p12
          security create-keychain -p "" build.keychain
          security import cert.p12 -k ~/Library/Keychains/build.keychain -P "$IOS_CERT_PASSWORD" -T /usr/bin/codesign
          security list-keychain -d user -s ~/Library/Keychains/build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/build.keychain

      # ðŸ”¹ Build Flutter iOS release (creates Runner.xcworkspace)
      - name: Build iOS release
        run: flutter build ios --release --no-codesign

      # ðŸ”¹ Archive IPA using xcodebuild
      - name: Archive .ipa
        run: |
          mkdir -p build/ios/ipa
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -sdk iphoneos \
            -archivePath build/ios/Runner.xcarchive archive
          xcodebuild -exportArchive \
            -archivePath build/ios/Runner.xcarchive \
            -exportOptionsPlist ios/ExportOptions.plist \
            -exportPath build/ios/ipa

      # ðŸ”¹ Upload to TestFlight (fastlane deliver)
      - name: Upload to TestFlight
        run: |
          xcrun altool --upload-app \
            -f build/ios/ipa/Runner.ipa \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD"

      # ðŸ”¹ Save the IPA as an artifact (optional)
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Rentpedia-iOS
          path: build/ios/ipa
